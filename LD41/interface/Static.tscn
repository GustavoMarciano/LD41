[gd_scene load_steps=4 format=2]

[ext_resource path="res://interface/Static.gd" type="Script" id=1]

[sub_resource type="Shader" id=1]

code = "shader_type canvas_item;

uniform float t;
uniform float d;
uniform float screen_w;
uniform float screen_h;
uniform float intensity;

float rand(float n) {
	return fract(n * 100.0 * 43758.5453123);
}

void fragment() {
	float prev = 1.0;
    vec3 c = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0).rgb;
    float p = float(int(SCREEN_UV.x*screen_w/2.0))/screen_w*
			  float(int(SCREEN_UV.y*screen_h/2.0))/screen_h;
	
	vec3 noise = vec3(prev = rand(prev*p*d), prev = rand(prev*p*d), prev = rand(prev*p*d));
	
	float scanline_intensity = 1.0-abs((8.0-mod(t, 8.0))/4.0-SCREEN_UV.y-0.5);
	
	scanline_intensity = scanline_intensity*scanline_intensity*scanline_intensity*scanline_intensity*scanline_intensity;
	scanline_intensity = scanline_intensity*scanline_intensity;
	
	vec3 scanline = scanline_intensity*vec3(0.2, 1, 0.5);
	
	COLOR.rgb = c.rgb*(1.0-intensity)+(noise+scanline)*intensity;
}"

[sub_resource type="ShaderMaterial" id=2]

render_priority = 0
shader = SubResource( 1 )
shader_param/t = null
shader_param/d = null
shader_param/screen_w = null
shader_param/screen_h = null
shader_param/intensity = null

[node name="Static" type="CanvasLayer" index="0"]

layer = 2
offset = Vector2( 0, 0 )
rotation = 0.0
scale = Vector2( 1, 1 )
transform = Transform2D( 1, 0, 0, 1, 0, 0 )
_sections_unfolded = [ "Anchor", "Grow Direction", "Margin", "Material", "Size Flags" ]

[node name="Panel" type="Panel" parent="." index="0"]

material = SubResource( 2 )
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 0
grow_vertical = 0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 3
size_flags_vertical = 3
script = ExtResource( 1 )


